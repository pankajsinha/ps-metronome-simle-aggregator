from ingest_events_from_file import convert_to_iso_8601_utc

import unittest
from parameterized import parameterized


class TestTimestampsToISO8601UTC(unittest.TestCase):
    @parameterized.expand([
        ('2021-03-01 00:10:05.657+00', '2021-03-01T00:10:05.657000Z'),
        ('2021-03-01 00:10:05.657+01:30', '2021-02-28T22:40:05.657000Z'),
        ('2021-03-01 00:10:05.657+02', '2021-02-28T22:10:05.657000Z'),
        ('2021-03-01T00:07:14.277000Z', '2021-03-01T00:07:14.277000Z'),
        ('2021-03-01T00:06:09.670000Z', '2021-03-01T00:06:09.670000Z'),
        ('2021-03-01T00:07:17.652000Z', '2021-03-01T00:07:17.652000Z'),
        ('2021-03-01 00:07:14.277+00', '2021-03-01T00:07:14.277000Z'),
        ('2021-03-01 00:06:09.67+00', '2021-03-01T00:06:09.670000Z'),
        ('2021-03-01 00:07:17.652+00', '2021-03-01T00:07:17.652000Z'),
        ('2021-03-01 00:07:20.165+00', '2021-03-01T00:07:20.165000Z'),
        ('2021-03-01 00:07:29.02+00', '2021-03-01T00:07:29.020000Z'),
        ('2021-03-01 00:07:31.628+00', '2021-03-01T00:07:31.628000Z'),
        ('2021-03-01 00:07:40.3+00', '2021-03-01T00:07:40.300000Z'),
        ('2021-03-01 00:07:44.0+00', '2021-03-01T00:07:44.000000Z'),
        ('2021-03-01 00:07:50.0+00', '2021-03-01T00:07:50.000000Z')
    ])
    def testTimestampsToUTC(self, timestamp, expectedUTC):
        self.assertEqual(convert_to_iso_8601_utc(timestamp), expectedUTC)


if __name__ == '__main__':
    unittest.main()
